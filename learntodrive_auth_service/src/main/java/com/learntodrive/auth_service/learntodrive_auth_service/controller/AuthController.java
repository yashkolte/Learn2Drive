package com.learntodrive.auth_service.learntodrive_auth_service.controller;

import com.learntodrive.auth_service.learntodrive_auth_service.model.User;
import com.learntodrive.auth_service.learntodrive_auth_service.role.Role;
import com.learntodrive.auth_service.learntodrive_auth_service.services.AuthService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;
import java.util.Set;

@RestController
@RequestMapping("/auth")
public class AuthController {
    @Autowired
    private AuthService authService;

    @PostMapping("/register")
    public ResponseEntity<?> register(@RequestBody Map<String, String> userDetails) {
        Set<Role> defaultRoles = Set.of(Role.USER); // âœ… Assign default role

        User user = new User(null, // `id` will be auto-generated by MongoDB
                userDetails.get("name"),
                userDetails.get("email"),
                userDetails.get("password"),
                defaultRoles);

        return ResponseEntity.ok(authService.register(user));
    }



    @PostMapping("/login")
    public ResponseEntity<?> login(@RequestBody Map<String, String> credentials) {
        String token = authService.login(credentials.get("email"), credentials.get("password"));
        return token.equals("Invalid credentials!")
                ? ResponseEntity.status(401).body(token)
                : ResponseEntity.ok(Map.of("token", token));
    }

    @PostMapping("/submit-details")
    public ResponseEntity<?> submitUserDetails(@RequestHeader("Authorization") String token,
                                               @RequestBody Map<String, String> userDetails) {
        String response = authService.sendUserDetailsToService(token,
                userDetails.get("dob"),
                userDetails.get("aadharNo"),
                userDetails.get("licenceNo"));
        return ResponseEntity.ok(response);
    }
}
